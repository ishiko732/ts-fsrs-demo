generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Revlog {
  lid               String   @id @unique @default(cuid())
  uid               Int      @default(0)
  did               Int      @default(0)
  cid               Int
  grade             Rating
  state             State
  due               DateTime
  stability         Float
  difficulty        Float
  elapsed_days      Int
  last_elapsed_days Int
  scheduled_days    Int
  review            DateTime
  card              Card     @relation(fields: [cid], references: [cid])
  duration          Int      @default(0)
  deleted           Boolean  @default(false)

  @@index([cid])
  @@index([did])
}

model Card {
  cid            Int       @id @unique @default(autoincrement())
  uid            Int       @default(0)
  due            DateTime  @default(now())
  stability      Float
  difficulty     Float
  elapsed_days   Int
  scheduled_days Int
  reps           Int
  lapses         Int
  state          State     @default(New)
  last_review    DateTime?
  nid            Int
  note           Note      @relation(fields: [nid], references: [nid])
  suspended      Boolean   @default(false)
  logs           Revlog[]
  deleted        Boolean   @default(false)
  orderId        Int       @default(0)

  @@unique([nid, orderId])
  @@index([nid])
  @@index([orderId])
}

model Deck {
  did        Int     @id @default(autoincrement())
  name       String
  desc       String  @default("")
  uid        Int
  fsrs       Json
  card_limit Int     @default(50)
  lapses     Int     @default(8)
  extends    Json
  deleted    Boolean @default(false)
}

model User {
  uid        Int    @id @unique @default(autoincrement())
  name       String @unique
  password   String
  oauthId    String
  oauthType  String @default("local")
  email      String @unique
  notes      Note[]
  timezone   String @default("UTC")
  hourOffset Int    @default(4)
}

model Note {
  nid      Int     @id @unique @default(autoincrement())
  uid      Int
  did      Int     @default(0)
  question String  @default("")
  answer   String  @default("")
  source   String  @default("")
  sourceId String?
  extend   Json
  user     User?   @relation(fields: [uid], references: [uid])
  deleted  Boolean @default(false)
  cards    Card[]

  @@index([uid])
  @@index([sourceId, source])
}

enum State {
  New        @map("0")
  Learning   @map("1")
  Review     @map("2")
  Relearning @map("3")
}

enum Rating {
  Manual @map("0")
  Again  @map("1")
  Hard   @map("2")
  Good   @map("3")
  Easy   @map("4")
}
