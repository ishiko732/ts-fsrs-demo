// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
	"name": "tsfsrs_demo_devcontainer",
	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../docker-compose-db.yml",
		"../docker-compose-dev.yml"
		// "docker-compose.yml"
	],
	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "next_app",
	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspaces/next_app",
	"features": {
		"ghcr.io/devcontainers/features/common-utils:2": {
			"configureZshAsDefaultShell": true,
			"installZsh": true,
			"installOhMyZsh": true,
			"upgradePackages": true,
			"username": "node"
		},
		"ghcr.io/devcontainers/features/node:1": {},
		"ghcr.io/devcontainers-contrib/features/prettier:1": {},
		"ghcr.io/devcontainers-contrib/features/prisma:2": {}
	},
	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],
	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",
	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "cat /etc/os-release",
	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"settings": {
				// ファイル保存時にフォーマット処理を実行
				"editor.formatOnSave": true,
				// 各ファイルのデフォルトのフォーマッターを指定
				"[javascript]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[javascriptreact]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[typescript]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[typescriptreact]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[json]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[postcss]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[css]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				// ESLintの対象を設定
				"eslint.validate": [
					"javascript",
					"javascriptreact",
					"typescript",
					"typescriptreact"
				],
				// 保存時に実行されるコードアクションを有効に設定
				"editor.codeActionsOnSave": {
					"source.fixAll.eslint": true,
					"source.organizeImports": false // ESLintによる自動インポート順序の整理を無効化
				},
				// VSCodeのデフォルトのフォーマッターを無効に
				"javascript.format.enable": false,
				"typescript.format.enable": false
			},
			// 拡張機能を追加
			"extensions": [
				"MS-CEINTL.vscode-language-pack-ja", // Visual Studio Codeの日本語言語パック
				"dbaeumer.vscode-eslint", // ESLint
				"esbenp.prettier-vscode", // Prettier
				"formulahendry.auto-rename-tag", // Auto Rename Tag
				"eamodio.gitlens", // GitLens
				"bradlc.vscode-tailwindcss" // Tailwind CSS IntelliSense
			]
		}
	}
	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "devcontainer"
}